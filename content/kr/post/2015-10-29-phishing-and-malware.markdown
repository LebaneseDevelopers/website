---
author: Josh Aas, ISRG 전무
date: 2015-10-29T00:00:00Z
excerpt: Let’s Encrypt를 발표한 이후 피싱 및 멀웨어 사이트에 대한 인증서를 발급하지 않는 방법을 확인하는 질문을 종종 받아 왔습니다.
title: 피싱과 멀웨어와 싸우는 데 있어 CA의 역할
slug: phishing-and-malware
---

Let’s Encrypt를 발표한 이후 피싱 및 멀웨어 사이트에 대한 인증서를 발급하지 않는 방법을 확인하는 질문을 종종 받아 왔습니다. 가장 흔하게 걱정하는 것은 유효한 HTTPS 인증서를 사용하면 이 사이트가 더 합법적으로 보이고, 신뢰할 수 있게 된다는 점입니다.

여기서 무엇을 할 것인지 결정하는 것은 어렵습니다. 한편으로, 이런 사이트들을 더 이상 좋아하지 않습니다. 우리의 임무는 안전하고 더 안전한 웹을 구축하도록 돕는 것입니다. 반면에, 인증서 발급(적어도 도메인 유효성 검증)이 2015년에 피싱 및 멀웨어 사이트에 대한 감시를 강화해야 할 적절한 수준인지 확신할 수 없습니다. 이 글은 이러한 악의적인 사이트들과 싸우는데 있어 CA 생태계의 역할에 대한 대화를 장려하기 위해 우리의 생각을 설명합니다.

# CA가 콘텐츠 감시를 제대로 하지 못함

Let’s Encrypt가 도메인 유효성 검증(DV) 인증서를 발급하도록 하겠습니다. 기술적인 수준에서 DV 인증서는 공용 키가 도메인에 속해 있다고 주장합니다 - 이 인증서는 사이트의 콘텐츠 또는 해당 콘텐츠를 실행하는 사용자에 대해 아무 것도 표시하지 않습니다. DA 인증서에는 웹 사이트의 평판, 실제 ID 또는 안전에 대한 어떠한 정보도 포함되어 있지 않습니다. 하지만, 많은 사람들은 단순히 DV 인증서의 존재가 적어도 저 정보들 중 일부를 함축할 수 있다고 생각합니다.

DV 인증서가 그 사이트의 콘텐츠에 대한 일종의 승인 도장으로 간주하는 것은 몇 가지 이유로 문제가 됩니다.

첫째, CA는 피싱 방지 및 멀웨어 방지 작업을 운영하기에 적합하지 않거나 정책 콘텐츠에 일반적으로 배치되어 있지 않습니다. 단지 사이트 콘텐츠에 대한 충분한 가시성을 확보하지 못했을 뿐입니다. CA가 할 수 있는 최고의 행동은 마이크로소프트 및 구글과 같이 훨씬 더 많은 콘텐츠 인식을 가지고 있는 조직에서 확인하는 것입니다. 구글과 마이크로소프트는 막대한 크롤링과 보고 인프라로부터 웹에 대한 방대한 양의 데이터를 소비합니다. 이 데이터를 사용하여 복잡한 기계 알고리즘(개발되거나 수십 명의 직원에 의해 운영되는)을 사용하여 악성 사이트 및 콘텐츠를 식별할 수 있습니다.

CA가 양호한 API로 피싱 및 멀웨어 상태를 확인하더라도, 피싱과 멀웨어에 대해 정확하게 정보를 표현하는 CA의 기능은 극도로 제한되어 있습니다. 사이트 콘텐츠는 인증서 발급 및 해지 주기보다 훨씬 더 빠르게 변경될 수 있으며, 피싱 및 멀웨어 상태는 페이지별로 다를 수 있고 인증서 및 브라우저 UI에는 피싱 및 멀웨어 정보가 거의 없습니다. CA가 피싱 이나 멀웨어 콘텐츠가 포함된 웹 사이트에 인증서를 발행하지 않은 경우, 사용자에게 잠금 아이콘이 표시되지 않습니다. 브라우저에 안티 피싱 및 안티 멀웨어 기능이 있는 경우 사용자는 훨씬 더 잘 알게 되고 보호되며, 이러한 제한으로 인해 피해 받지 않습니다. 

DV 인증서를 사이트 콘텐츠의 “승인 도장”으로 취급하는 또 다른 문제는 높은 가치의 도메인을 블랙리스트화 시키는 것 이상으로 CA가 안티 피싱 및 안티 멀웨어로 판정할 표준이 없다는 점입니다. 따라서, 주요 브라우저가 신뢰하는 수천 개의 CA에서 일관된 판정이 되지 않습니다. 한 CA가 나쁜 사이트를 없애기 위해 특별한 조치를 취하더라도 공격자들은 그저 다른 CA를 둘러볼 수 있습니다. 악의적인 사람들은 거의 항상 인증서를 발급받을 수 있고 사람들을 악용할 수 있을 만큼 인증서의 유효기간을 길게 잡을 수 있습니다. 최고의 CA 피싱 방지 및 안티 멀웨어 프로그램이 얼마나 정교한지는 중요하지 않으며, 최악의 프로그램이 얼마나 좋은지가 중요하다고 합니다. 이것은 “가장 약한 고리 찾기” 시나리오이고 약한 고리를 찾기 어렵지 않습니다.

브라우저 제작자들은 이 모든 것을 깨달았습니다. 이 때문에 피싱 및 멀웨어 차단 기능을 추가하고 인증서에서 수행하는 주장을 보다 정확하게 반영하기 위해 UI를 개선하였습니다.

# TLS는 더 이상 선택 사항이 아닙니다

1990년대에 처음 개발되었을 때, HTTPS와 SSL/TLS는 신용카드를 받는 온라인 은행과 쇼핑 사이트와 같은 특정 종류의 웹 사이트에만 필요하거나 유용한 “특수” 보호로 간주되었습니다. 그 이후로 HTTPS는 거의 모든 웹 사이트에서 중요하다는 것을 알게 되었습니다. 사용자가 암호를 사용하여 로그인 할 수 있는 웹 사이트, 어떤 방식으로든 [사용자를 추적](https://www.washingtonpost.com/news/the-switch/wp/2013/12/10/nsa-uses-google-cookies-to-pinpoint-targets-for-hacking/)하지 않는 웹 사이트, [콘텐츠가 변경되는 것을 원하지 않는](http://arstechnica.com/tech-policy/2014/09/why-comcasts-javascript-ad-injections-threaten-security-net-neutrality/) 웹 사이트 및 다른 사람들이 아는 것을 원하지 않는 콘텐츠를 제공하는 모든 웹 사이트에서 중요합니다. 또한 HTTPS로 보호되지 않은 웹 사이트가 [다른 사이트를 공격하는 데 사용될 수 있다](http://krebsonsecurity.com/2015/04/dont-be-fodder-for-chinas-great-cannon/)는 것을 배웠습니다.

TLS는 [더 이상 예외가 아니며](https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/), [그렇게 해서는 안됩니다](https://www.chromium.org/Home/chromium-security/marking-http-as-non-secure). 그것은 Let’s Encrypt를 만든 이유입니다. 웹 상에서 대화를 위한 기본 방법이 TLS가 되길 희망합니다. TCP나 HTTP와 같은 구조의 기본적인 부분이어야 합니다. 이렇게 되면, 인증서를 갖는 것이 부가 가치가 아니라 실제로 존재하는 문제가 될 것이며, 콘텐츠 감시 실수 비용이 많이 듭니다. 기술적인 수준에서, 실수는 느린 발행과 취소 주기로 인한 심각한 중단 시간과 [HSTS](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security)와 같은 기능으로 이어질 것입니다. 철학적이고 도덕적인 수준에서 실수(죄가 있거나 없거나)는 검열을 의미할 것입니다. 왜냐하면 CA가 온라인 상의 발언과 존재에 대한 문지기이기 때문입니다. 이것은 아마도 CA에게는 좋은 역할이 아닐 것입니다.

# 계획

적어도 당분간은, Let’s Encrypt가 인증서를 발급하기 전에 [구글 세이프 브라우징 API](https://developers.google.com/safe-browsing/)에 확인해 보고 피싱이나 멀웨어 사이트로 지정된 사이트에는 발행하지 않을 것입니다. 구글의 API는 피싱 및 멀웨어 상태 정보를 확인할 수 있는 최고의 장소이며, 발행 전에 이 API로 쿼리를 많이 하는 것은 거의 확실한 낭비이며 효과가 없습니다.

많은 사람들이 아직까지 DA 인증서에 대해 피싱 방지 및 악성코드 방지 노력을 완전히 포기하는 것에 익숙하지 않아 이 피싱 및 멀웨어 상태 점검을 시행할 예정입니다. 동의하지 않더라도, 많은 사람들이 CA 행동이라고 인식하는 것을 우리가 포기하기 전에 대화를 좀 더 오랫동안 계속하고 싶습니다.

# 결론

피싱 및 콘텐츠에 대한 싸움은 중요하지만 적어도 DV 인증서와 관련해서 CA가 최전선에 있어야 한다는 것은 말이 되지 않습니다. 다시 말해서, 대화를 계속하는 동안 구글 세이프 브라우징 API에 대한 점검을 계속할 것입니다.

귀하의 의견을 듣고 싶습니다. [여기](https://community.letsencrypt.org/t/the-cas-role-in-fighting-phishing-and-malware/)를 클릭해 주십시오.
